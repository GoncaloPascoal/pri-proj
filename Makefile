
DEPENDENCIES = pandas seaborn beautifulsoup4 lxml steamreviews colorama \
howlongtobeatpy requests requests_futures tqdm

all : install-dependencies reviews hltb proton-db steam-spy prepare

# Installs necessary dependencies using pip, Python's package installer
install-dependencies : /usr/bin/pip3
	@for dep in $(DEPENDENCIES); do \
		echo "Installing $$dep..." ; \
		pip3 install $$dep > /dev/null ; \
	done

# Gathers game review data using the Steam Store API
reviews : /usr/bin/python3
	python3 reviews.py

# Updates the ratings and playtime information using the SteamSpy API
steam-spy : /usr/bin/python3 data/steam.csv
	python3 steam_spy.py

# Gathers data from Wikipedia articles
wikipedia : /usr/bin/python3 data/steam_updated.csv
	python3 wikipedia.py

# Process raw Wikipedia article data
process-wikipedia : /usr/bin/python3 data/wikipedia_raw.json
	python3 process_wikipedia.py

# Fetches information from HowLongToBeat website (regarding the expected
# length of a game based on user reports)
hltb : /usr/bin/python3
	python3 hltb.py

# Gets number of reports and game compatibility tier from ProtonDB
proton-db : /usr/bin/python3
	python3 proton_db.py

# Script for cleaning and processing the Kaggle dataset
prepare : /usr/bin/python3 data/reviews.csv data/steam_updated.csv \
data/steam_description_data.csv data/proton_db.csv data/hltb.csv
	python3 prepare.py

# Deletes all generated JSON files
clean-json : /usr/bin/rm
	rm -f data/steam.json data/descriptions.json \
	data/reviews.json data/hltb.json data/proton_db.json

# Deletes all files generated by the pipeline
clean : clean-json
	rm -f data/reviews.csv data/hltb.csv data/proton_db.csv data/steam_updated.csv

# Perform exploratory data analysis
analysis :
	python3 analysis.py

solr-games : solr/enums_config.xml solr/games_schema.json data/steam.json
	docker exec $(cn) bin/solr create_core -c games
	docker cp solr/enums_config.xml $(cn):/var/solr/data/games/enums_config.xml
	docker cp solr/synonyms.txt $(cn):/var/solr/data/games/conf/synonyms.txt
	curl -X POST -H 'Content-Type:application/json' \
	--data-binary @solr/games_schema.json \
	http://localhost:8983/solr/games/schema
	docker cp data/steam.json $(cn):/steam.json
	docker exec $(cn) bin/post -c games /steam.json

solr-reviews : solr/reviews_schema.json data/reviews.json
	docker exec $(cn) bin/solr create_core -c reviews
	docker cp solr/enums_config.xml $(cn):/var/solr/data/reviews/enums_config.xml
	docker cp solr/synonyms.txt $(cn):/var/solr/data/reviews/conf/synonyms.txt
	curl -X POST -H 'Content-Type:application/json' \
	--data-binary @solr/reviews_schema.json \
	http://localhost:8983/solr/reviews/schema
	docker cp data/reviews.json $(cn):/reviews.json
	docker exec $(cn) bin/post -c reviews /reviews.json

solr : solr-games solr-reviews

clean-solr-games :
	docker exec $(cn) bin/solr delete -c games

clean-solr-reviews : 
	docker exec $(cn) bin/solr delete -c reviews

clean-solr : clean-solr-games clean-solr-reviews

query: /usr/bin/python3
	python3 solr/query.py